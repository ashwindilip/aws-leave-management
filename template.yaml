AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Leave Management System with Step Functions, Lambda, API Gateway, SES, and DynamoDB

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs22.x
    MemorySize: 128
    Handler: app.handler
    CodeUri: hello-world/
    Environment:
      Variables:
        TABLE_NAME: !Ref LeaveRequestsTable
        SES_EMAIL: "ashwin.dilip@antstack.io"
        JWT_SECRET: "your-jwt-secret" # Placeholder; override via samconfig.toml

Resources:
  LeaveRequestsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AshwinLeaveRequestsTable
      AttributeDefinitions:
        - AttributeName: requestId
          AttributeType: S
      KeySchema:
        - AttributeName: requestId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ApplyLeaveFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.applyLeave
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LeaveRequestsTable
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.authorizer
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  SendApprovalEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.sendApprovalEmail
      Policies:
        - SESCrudPolicy:
            IdentityName: "ashwin.dilip@antstack.io"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  ProcessApprovalFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.processApproval
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - states:SendTaskSuccess
                - states:SendTaskFailure
              Resource: !Ref LeaveManagementStateMachine
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  NotifyUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.notifyUser
      Policies:
        - SESCrudPolicy:
            IdentityName: "ashwin.dilip@antstack.io"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  LeaveManagementApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: "2.0"
        info:
          title: Leave Management API
        paths:
          /apply-leave:
            post:
              security:
                - Authorizer: []
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: POST
                uri: !Sub arn:aws:apigateway:${AWS::Region}:states:action/StartExecution
                credentials: !GetAtt ApiGatewayRole.Arn
                requestTemplates:
                  application/json: |
                    #set($inputJson = $input.json('$'))
                    {
                      "input": "$util.escapeJavaScript($inputJson)",
                      "stateMachineArn": "${LeaveManagementStateMachine}",
                      "apiBaseUrl": "https://${LeaveManagementApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
                    }
                responses:
                  default:
                    statusCode: "200"
          /process-approval:
            get:
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProcessApprovalFunction.Arn}/invocations
      Auth:
        Authorizers:
          Authorizer:
            FunctionArn: !GetAtt AuthorizerFunction.Arn

  LeaveManagementStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: step-function.asl.json
      DefinitionSubstitutions:
        ApplyLeaveFunctionArn: !GetAtt ApplyLeaveFunction.Arn
        SendApprovalEmailFunctionArn: !GetAtt SendApprovalEmailFunction.Arn
        NotifyUserFunctionArn: !GetAtt NotifyUserFunction.Arn
      Role: !GetAtt StateMachineRole.Arn

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt ApplyLeaveFunction.Arn
                  - !GetAtt SendApprovalEmailFunction.Arn
                  - !GetAtt NotifyUserFunction.Arn

  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StartExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: !Ref LeaveManagementStateMachine

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${LeaveManagementApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  StateMachineArn:
    Description: ARN of the State Machine
    Value: !Ref LeaveManagementStateMachine
